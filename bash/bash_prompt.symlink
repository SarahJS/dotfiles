# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# colored prompt
if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

#if [ "$color_prompt" = yes ]; then
#    PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\n$ "
#else
#    PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\n$ "
#fi
unset color_prompt force_color_prompt

function set_prompt() {
    local ret
    local open="\["
    local close="\]"
    local color="\[\033["

    local     nocol="\[\033[m\]"
    local     black="\[\033[0;30m\]"
    local      blue="\[\033[0;34m\]"
    local     green="\[\033[0;32m\]"
    local      cyan="\[\033[0;36m\]"
    local       red="\[\033[0;31m\]"
    local    purple="\[\033[0;35m\]"
    local     brown="\[\033[0;33m\]"
    local   lt_grey="\[\033[0;37m\]"
    local   dk_gray="\[\033[1;30m\]"
    local   lt_blue="\[\033[1;34m\]"
    local  lt_green="\[\033[1;32m\]"
    local   lt_cyan="\[\033[1;36m\]"
    local    lt_red="\[\033[1;31m\]"
    local lt_purple="\[\033[1;35m\]"
    local    yellow="\[\033[1;33m\]"
    local     white="\[\033[1;37m\]"



    ret+="$cyan\u$nocol@$green\h$nocol:$yellow\w$nocol"
    ret+="\n$"
    echo "$ret "
}

export PS1=$(set_prompt)

export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
