# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace
# append to the history file, don't overwrite it
shopt -s histappend
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# when using cd, minor errors will be corrected
shopt -s cdspell

# case insensitive filename expansion
shopt -s nocaseglob

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

source ~/.bash_aliases
source ~/.bash_prompt

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi
if [ -f `brew --prefix`/etc/bash_completion ]; then
    . `brew --prefix`/etc/bash_completion
fi

if [ -f `brew --prefix coreutils`/libexec/gnubin ]; then
    export PATH=$PATH:`brew --prefix`/etc/bash_completion
fi

bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'
bind 'set show-all-if-ambiguous on'
bind 'set completion-ignore-case on'


if [ -d $HOME/.node-completion ]; then
    # {{{
    # Node Completion - Auto-generated, do not touch.
    shopt -s progcomp
    for f in $(command ls ~/.node-completion); do
      f="$HOME/.node-completion/$f"
      test -f "$f" && . "$f"
    done
    # }}}
fi

[ -n "$DISPLAY" ] && BROWSER=firefox

# Add stuff to my PATH
[ -d "$HOME/.dotfiles/bin" ] && export PATH="$HOME/.dotfiles/bin:$PATH"
[ -d "$HOME/bin" ] && export PATH="$HOME/bin:$PATH"
[ -d "/usr/local/go/bin" ] && export PATH="$PATH:/usr/local/go/bin"

# Mac OS X stuff
if [ -n "$(which brew 2>/dev/null)" ]; then
    [ -f $(brew --prefix)/etc/bash_completion ] && . $(brew --prefix)/etc/bash_completion
    [ -f $(brew --prefix)git/contrib/completion/git-completion.bash ] && . $(brew --prefix)git/contrib/completion/git-completion.bash
fi
[ -f /usr/local/bin/virtualenvwrapper.sh ] && source /usr/local/bin/virtualenvwrapper.sh
[ "$(uname -s)" == "Darwin" ] && export DISPLAY=localhost:0.0

# go stuff
if [ -d "$HOME/Dropbox/Projects/go" ]; then
    export GOPATH="$HOME/Dropbox/Projects/go"
    export GOROOT=/usr/local/go
    export PATH=$PATH:$GOPATH/bin
else
    if [ -d "$HOME/bin/go" ]; then
        export GOROOT=$HOME/bin/go
        export PATH=$PATH:$HOME/bin/go/bin
    else
        if [ -d "$HOME/go" ]; then
            export GOPATH="$HOME/go"
            export PATH=$PATH:$GOPATH/bin
        fi
    fi
fi

if [ -d "$HOME/.virtualenvs" ]; then
    export WORKON_HOME="$HOME/.virtualenvs"
    export PIP_VIRTUALENV_BASE=$WORKON_HOME
    export PIP_RESPECT_VIRTUALENV=true
    export VIRTUALENVWRAPPER_VIRTUALENV="virtualenv"
    export PIP_DOWNLOAD_CACHE=$HOME/.pip/caches
    export PYTHONPATH=$PYTHONPATH:/usr/local/lib/python2.7/dist-packages/:/usr/lib/pymodules/python2.7/
fi

if [ -d "/usr/local/lib/python2.7/site-packages" ]; then
    export PYTHONPATH=$PYTHONPATH:/usr/local/lib/python2.7/site-packages
fi

export REPO_PATH=boar+ssh://boar@odin.restek.wwu.edu/home/boar/repo

if [ -d "$HOME/cs352w14/CVSrep" ]; then
    export CVSROOT=$HOME/cs352w14/CVSrep
fi

if [ -d "$HOME/projects" ]; then
    export PROJECT_HOME=$HOME/projects
fi

if [ -d "$HOME/.gem/bin" ]; then
    export PATH="$PATH:$HOME/.gem/bin"
fi
if [ -d "/var/lib/gems" ]; then
    export GEM_PATH="$GEM_PATH:/var/lib/gems"
fi
if [ -d "$HOME/.gems/" ]; then
    export GEM_HOME="$HOME/.gems"
    export PATH="$PATH:$HOME/.gems/bin"
else
    mkdir -p $HOME/.gems
fi

if [ -f "/Applications/Octave.app/Contents/Resources/bin/octave" ]; then
    export PATH=$PATH:/Applications/Octave.app/Contents/Resources/bin
fi

export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
export PATH="$PATH:$HOME/.rvm/rubies/ruby-2.1.2/bin/" # Add RVM to PATH for scripting

if [ -f "$HOME/.profile" ]; then
    source ~/.profile
fi

export PATH=$HOME/local/bin:$PATH

if [ -f "$HOME/.rvm/scripts/rvm" ]; then
    source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
fi
